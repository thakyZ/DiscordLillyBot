package com.github.vaerys.commands.servers;

<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/servers/ListServers.java~HEAD
import com.github.vaerys.commands.CommandObject;
import com.github.vaerys.interfaces.Command;
=======
import com.github.vaerys.enums.ChannelSetting;
import com.github.vaerys.enums.SAILType;
import com.github.vaerys.handlers.RequestHandler;
>>>>>>> master:src/main/java/com/github/vaerys/commands/servers/ListServers.java
import com.github.vaerys.main.Utility;
import com.github.vaerys.masterobjects.CommandObject;
import com.github.vaerys.objects.ServerObject;
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/servers/ListServers.java~HEAD
import com.github.vaerys.objects.XEmbedBuilder;
=======
import com.github.vaerys.templates.Command;
import com.github.vaerys.utilobjects.XEmbedBuilder;
>>>>>>> master:src/main/java/com/github/vaerys/commands/servers/ListServers.java
import sx.blah.discord.handle.obj.Permissions;

import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;

/**
 * Created by Vaerys on 31/01/2017.
 */
public class ListServers implements Command {

    @Override
    public String execute(String args, CommandObject command) {
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/servers/ListServers.java~HEAD
        XEmbedBuilder builder = new XEmbedBuilder();
        String title = "> Here are the Servers I have Listed:";
        ArrayList<String> serverNames = command.guild.servers.getServers().stream().map(ServerObject::getName).collect(Collectors.toCollection(ArrayList::new));
        Collections.sort(serverNames);
        String suffix = Utility.getCommandInfo(new Server(), command);
        Utility.listFormatterEmbed(title,builder,serverNames,false,suffix);
        builder.withColor(Utility.getUsersColour(command.client.bot, command.guild.get()));
        Utility.sendEmbedMessage("",builder,command.channel.get());
=======
        if (command.guild.servers.getServers().size() == 0) {
            return "> No servers have been listed yet, If you would like to list one yourself you can do so using **" +
                    get(AddServer.class).getUsage(command) + "**.";
        }
        XEmbedBuilder builder = new XEmbedBuilder(command);
        String title = "> Here are the Servers I have Listed:";
        ArrayList<String> serverNames = command.guild.servers.getServers().stream().map(ServerObject::getName).collect(Collectors.toCollection(ArrayList::new));
        Collections.sort(serverNames);
        String suffix = get(Server.class).missingArgs(command);
        Utility.listFormatterEmbed(title, builder, serverNames, false, suffix);
        RequestHandler.sendEmbedMessage("", builder, command.channel.get());
>>>>>>> master:src/main/java/com/github/vaerys/commands/servers/ListServers.java
        return null;
    }

    @Override
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/servers/ListServers.java~HEAD
    public String[] names() {
        return new String[]{"ListServers","Servers","ServerList"};
=======
    protected String[] names() {
        return new String[]{"ListServers", "Servers", "ServerList"};
>>>>>>> master:src/main/java/com/github/vaerys/commands/servers/ListServers.java
    }

    @Override
    public String description() {
        return "Shows a listing of this guild's user registered servers.";
    }

    @Override
    protected String usage() {
        return null;
    }

    @Override
    protected SAILType type() {
        return SAILType.SERVERS;
    }

    @Override
    protected ChannelSetting channel() {
        return ChannelSetting.SERVERS;
    }

    @Override
    protected Permissions[] perms() {
        return new Permissions[0];
    }

    @Override
    protected boolean requiresArgs() {
        return false;
    }

    @Override
    protected boolean doAdminLogging() {
        return false;
    }

    @Override
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/servers/ListServers.java~HEAD
    public String dualDescription() {
        return null;
    }

    @Override
    public String dualUsage() {
        return null;
    }

    @Override
    public String dualType() {
        return null;
    }

    @Override
    public Permissions[] dualPerms() {
        return new Permissions[0];
=======
    public void init() {

>>>>>>> master:src/main/java/com/github/vaerys/commands/servers/ListServers.java
    }
}
