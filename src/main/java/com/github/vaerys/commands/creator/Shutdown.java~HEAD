package com.github.vaerys.commands.creator;

<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/creator/Shutdown.java~HEAD
import com.github.vaerys.commands.CommandObject;
import com.github.vaerys.interfaces.Command;
import com.github.vaerys.main.Globals;
import com.github.vaerys.main.Utility;
=======
import com.github.vaerys.enums.ChannelSetting;
import com.github.vaerys.enums.SAILType;
import com.github.vaerys.handlers.RequestHandler;
import com.github.vaerys.main.Constants;
import com.github.vaerys.main.Globals;
import com.github.vaerys.main.Utility;
import com.github.vaerys.masterobjects.CommandObject;
import com.github.vaerys.templates.Command;
>>>>>>> master:src/main/java/com/github/vaerys/commands/creator/Shutdown.java
import sx.blah.discord.handle.obj.Permissions;
import sx.blah.discord.util.DiscordException;

/**
 * Created by Vaerys on 31/01/2017.
 */
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/creator/Shutdown.java~HEAD
public class Shutdown implements Command {
=======
public class Shutdown extends Command {

>>>>>>> master:src/main/java/com/github/vaerys/commands/creator/Shutdown.java
    @Override
    public String execute(String args, CommandObject command) {
        Utility.sendMessage("> Shutting Down.", command.channel.get());
        Utility.sendGlobalAdminLogging(this, args, command);
        try {
            Thread.sleep(4000);
            Globals.getClient().logout();
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/creator/Shutdown.java~HEAD
            Runtime.getRuntime().exit(0);
=======
            System.exit(Constants.EXITCODE_STOP);
>>>>>>> master:src/main/java/com/github/vaerys/commands/creator/Shutdown.java
        } catch (DiscordException e) {
            Utility.sendStack(e);
        } catch (InterruptedException e) {
            Utility.sendStack(e);
        }
        return null;
    }

    @Override
    protected String[] names() {
        return new String[]{"Shutdown"};
    }

    @Override
    public String description() {
        return "Shuts the bot down safely.\n" + ownerOnly;
    }

    @Override
    protected String usage() {
        return null;
    }

    @Override
    protected SAILType type() {
        return SAILType.CREATOR;
    }

    @Override
    protected ChannelSetting channel() {
        return null;
    }

    @Override
    protected Permissions[] perms() {
        return new Permissions[0];
    }

    @Override
    protected boolean requiresArgs() {
        return false;
    }

    @Override
    protected boolean doAdminLogging() {
        return true;
    }

    @Override
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/creator/Shutdown.java~HEAD
    public String dualDescription() {
        return null;
    }

    @Override
    public String dualUsage() {
        return null;
    }

    @Override
    public String dualType() {
        return null;
    }

    @Override
    public Permissions[] dualPerms() {
        return new Permissions[0];
=======
    public void init() {

>>>>>>> master:src/main/java/com/github/vaerys/commands/creator/Shutdown.java
    }
}
