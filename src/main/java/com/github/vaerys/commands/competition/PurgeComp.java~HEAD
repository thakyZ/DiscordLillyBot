package com.github.vaerys.commands.competition;

<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java~HEAD
import com.github.vaerys.commands.CommandObject;
import com.github.vaerys.interfaces.Command;
=======
import com.github.vaerys.enums.ChannelSetting;
import com.github.vaerys.enums.SAILType;
import com.github.vaerys.masterobjects.CommandObject;
import com.github.vaerys.templates.Command;
>>>>>>> master:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java
import sx.blah.discord.handle.obj.Permissions;

/**
 * Created by Vaerys on 29/03/2017.
 */
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java~HEAD
public class PurgeComp implements Command{
=======
public class PurgeComp extends Command {
>>>>>>> master:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java

    @Override
    public String execute(String args, CommandObject command) {
        command.guild.competition.purgeEntries();
        command.guild.competition.purgeVotes();
        return "> Purge Complete.";
    }

    @Override
    protected String[] names() {
        return new String[]{"PurgeComp"};
    }

    @Override
    public String description() {
        return "Purges the Current Comp to make way for a new one.";
    }

    @Override
    protected String usage() {
        return null;
    }

    @Override
    protected SAILType type() {
        return SAILType.COMPETITION;
    }

    @Override
    protected ChannelSetting channel() {
        return null;
    }

    @Override
    protected Permissions[] perms() {
        return new Permissions[]{Permissions.ADMINISTRATOR};
    }

    @Override
    protected boolean requiresArgs() {
        return false;
    }

    @Override
    protected boolean doAdminLogging() {
        return false;
    }

    @Override
<<<<<<< HEAD:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java~HEAD
    public String dualDescription() {
        return null;
    }

    @Override
    public String dualUsage() {
        return null;
    }

    @Override
    public String dualType() {
        return null;
    }

    @Override
    public Permissions[] dualPerms() {
        return new Permissions[0];
=======
    public void init() {

>>>>>>> master:src/main/java/com/github/vaerys/commands/competition/PurgeComp.java
    }
}
