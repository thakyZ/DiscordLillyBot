package com.github.vaerys.pogos;


<<<<<<< HEAD:src/main/java/com/github/vaerys/pogos/GlobalData.java~HEAD
import com.github.vaerys.interfaces.GlobalFile;
import com.github.vaerys.objects.PatchObject;
=======
import com.github.vaerys.objects.BlacklistedUserObject;
>>>>>>> master:src/main/java/com/github/vaerys/pogos/GlobalData.java
import com.github.vaerys.objects.ReminderObject;

import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;
import java.util.stream.Collectors;

/**
 * Created by Vaerys on 10/02/2017.
 */
public class GlobalData extends GlobalFile {
    public static final String FILE_PATH = "Global_Data.json";
<<<<<<< HEAD:src/main/java/com/github/vaerys/pogos/GlobalData.java~HEAD
    ArrayList<String> blockedFromDMS = new ArrayList<>();
=======
    private double fileVersion = 1.0;
    ArrayList<Long> blockedFromDMS = new ArrayList<>();
    List<BlacklistedUserObject> blacklistedUsers = new ArrayList<>();
>>>>>>> master:src/main/java/com/github/vaerys/pogos/GlobalData.java
    ArrayList<ReminderObject> reminders = new ArrayList<>();
    private ArrayList<PatchObject> patches = new ArrayList<>();
    private ArrayList<String> globalPatches = new ArrayList<>();

<<<<<<< HEAD:src/main/java/com/github/vaerys/pogos/GlobalData.java~HEAD
//    private ArrayList<QueueObject> queuedRequests = new ArrayList<>();
//    private ArrayList<DailyUserMessageObject> dailyMessages = new ArrayList<>();

    public ArrayList<PatchObject> getPatches() {
        return patches;
    }

    public ArrayList<String> getBlockedFromDMS() {
        return blockedFromDMS;
    }

//    public ArrayList<QueueObject> getQueuedRequests() {
//        return queuedRequests;
//    }

    public boolean blockUserFromDMS(String userID) {
=======
    public List<BlacklistedUserObject> getBlacklistedUsers() {
        return blacklistedUsers;
    }

    public ArrayList<Long> getBlockedFromDMS() {
        return blockedFromDMS;
    }

    public void blockUserFromDMS(long userID) {
>>>>>>> master:src/main/java/com/github/vaerys/pogos/GlobalData.java
        blockedFromDMS.add(userID);
        return true;
    }

    public BlacklistedUserObject blacklistUser(long userID) {
        BlacklistedUserObject blacklistedUser;
        long blacklistCounter = 0;
        ListIterator<BlacklistedUserObject> iterator = blacklistedUsers.listIterator();
        while(iterator.hasNext()) {
            blacklistedUser = iterator.next();
            if (userID == blacklistedUser.getUserID()) {
                blacklistCounter = blacklistedUser.getCounter();
                iterator.remove();
                break;
            }
        }
        blacklistCounter++;
        blacklistedUser = new BlacklistedUserObject(userID, blacklistCounter);
        blacklistedUsers.add(blacklistedUser);
        return blacklistedUser;
    }

    public ArrayList<ReminderObject> getReminders() {
        return reminders;
    }

    public List<ReminderObject> getRemindersUser(long userID) {
        return reminders.stream().filter(r-> r.getUserID() == userID).collect(Collectors.toList());
    }

    public void addReminder(ReminderObject object) {
        reminders.add(object);
    }

<<<<<<< HEAD:src/main/java/com/github/vaerys/pogos/GlobalData.java~HEAD
    public void removeReminder(String userID) {
        for (int i = 0; i < reminders.size(); i++) {
            if (reminders.get(i).getUserID().equals(userID)) {
                reminders.remove(i);
            }
        }
    }
=======
//    public void removeReminder(long userID) {
//        for (int i = 0; i < reminders.size(); i++) {
//            if (reminders.getAllToggles(i).getUserID() == userID) {
//                reminders.remove(i);
//            }
//        }
//    }
>>>>>>> master:src/main/java/com/github/vaerys/pogos/GlobalData.java

    public void removeReminder(String userID, String reminder) {
        for (int i = 0; i < reminders.size(); i++) {
<<<<<<< HEAD:src/main/java/com/github/vaerys/pogos/GlobalData.java~HEAD
            if (reminders.get(i).getUserID().equals(userID) && reminders.get(i).getMessage().equals(reminder)) {
=======
            if (reminders.get(i).getUserID() == object.getUserID() && reminders.get(i).getExecuteTime() == object.getExecuteTime()) {
>>>>>>> master:src/main/java/com/github/vaerys/pogos/GlobalData.java
                reminders.remove(i);
            }
        }
    }

    public ArrayList<String> getGlobalPatches() {
        return globalPatches;
    }

//    public ArrayList<DailyUserMessageObject> getMessages() {
//        return dailyMessages;
//    }

//    public ArrayList<DailyUserMessageObject> getMessages(DayOfWeek day) {
//        ArrayList dailyMessages = new ArrayList();
//        for (DailyUserMessageObject d: this.dailyMessages){
//            if (d.getDay() == day){
//                dailyMessages.add(d);
//            }
//        }
//        return dailyMessages;
//    }
}
